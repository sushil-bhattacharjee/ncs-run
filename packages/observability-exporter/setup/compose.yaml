version: '3.9'
services:
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.94.0
    container_name: observability-exporter-otelcol
    command: --config /otelcol.yaml
    networks:
      observability-exporter:
        aliases:
          - otelcol
    ports:
      - "${OTELCOL_GRPC_PORT}:4317"
      - "${OTELCOL_HTTP_PORT}:4318"
      - "9464:9464"
    volumes:
      - ${OTELCOL_CONFIG:-./otelcol.yaml}:/otelcol.yaml

  elasticsearch:
    image: elasticsearch:7.17.9
    container_name: observability-exporter-elasticsearch
    environment:
      - discovery.type=single-node
    networks:
      observability-exporter:
        aliases:
          - elasticsearch
    ports:
      - 9200:9200
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data

  jaeger-collector:
    image: jaegertracing/jaeger-collector:1.43
    container_name: observability-exporter-jaeger-collector
    depends_on:
      - elasticsearch
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200/
      - COLLECTOR_OTLP_ENABLED=true
    restart: always
    networks:
      observability-exporter:
        aliases:
          - jaeger-collector

  jaeger-query:
    image: jaegertracing/jaeger-query:1.43
    container_name: observability-exporter-jaeger
    depends_on:
      - elasticsearch
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200/
    restart: always
    networks:
      observability-exporter:
        aliases:
          - jaeger
    ports:
      - "${JAEGER_PORT}:16686"

  influxdb:
    image: influxdb:2.7.1
    container_name: observability-exporter-influxdb
    environment:
      - INFLUXD_REPORTING_DISABLED=true
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=myorg
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
      - V1_AUTH_USERNAME=${INFLUXDB_USERNAME}
      - V1_AUTH_PASSWORD=${INFLUXDB_PASSWORD}
    networks:
      observability-exporter:
        aliases:
          - influxdb
    ports:
      - "${INFLUXDB_PORT}:8086"
    volumes:
      - ./influxdb_scripts:/docker-entrypoint-initdb.d
      - influxdb:/var/lib/influxdb2

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: observability-exporter-prometheus
    networks:
      observability-exporter:
        aliases:
          - prometheus
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus

  grafana:
    image: grafana/grafana:10.1.4
    container_name: observability-exporter-grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_DISABLE_SIGNOUT_MENU=true
      - GF_DASHBOARDS_JSON_ENABLED=true
    networks:
      observability-exporter:
        aliases:
          - grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - ./grafana/grafana_datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards

networks:
  observability-exporter:

volumes:
  influxdb:
    name: influxdb-volume
  prometheus:
    name: prometheus-volume
  elasticsearch:
    name: elasticsearch-volume