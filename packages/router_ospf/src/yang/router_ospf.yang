module router_ospf {

  namespace "http://example.com/router_ospf";
  prefix router_ospf;

  import ietf-inet-types {
    prefix inet;
  }
  import tailf-common {
    prefix tailf;
  }
  import tailf-ncs {
    prefix ncs;
  }

  description
    "Bla bla...";

  revision 2016-01-01 {
    description
      "Initial revision.";
  }

  list router_ospf {
    description "This is an RFS skeleton service";

    key name;
    leaf name {
      tailf:info "Unique service id";
      tailf:cli-allow-range;
      type string;
    }

    uses ncs:service-data;
    ncs:servicepoint router_ospf-servicepoint;

    // may replace this with other ways of refering to the devices.
    leaf device {
      type leafref {
        path "/ncs:devices/ncs:device/ncs:name";
      }
    }

    // replace with your own stuff here
    leaf process_id {
      type uint32;
      description "OSPF process ID";
      mandatory true;
    }
    leaf router_id {
      type inet:ipv4-address;
      description "Router ID for OSPF";
      mandatory true;
    }
    
    list network {
      key network_address;
      description "List of OSPF network statements";

      leaf network_address {
        type inet:ipv4-address;
        description "Network IP Address";
        mandatory true;
      }

      leaf wildcard_mask {
        type inet:ipv4-address;
        description "Subnet Mask for the OSPF network";
        mandatory true;
      }

      leaf area {
        type uint32;
        description "OSPF Area ID";
        mandatory true;
      }
    }
  }
}
