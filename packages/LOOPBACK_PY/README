This is a generated Python package, made by:

  ncs-make-package --service-skeleton python-and-template \
                   --component-class loopback_py.Loopback_py loopback_py

It contains a dummy YANG model which implements a minimal Service
and an Action that doesn't really do anything useful. They are
there just to get you going.

You will also find two test cases in:

  test/internal/lux/service/
  test/internal/lux/action/

that you can run if you have the 'lux' testing tool.
Your top Makefile also need to implement some Make targets
as described in the Makefiles of the test cases.
You can also just read the corresponding run.lux tests and
do them manually if you wish.

The 'lux' test tool can be obtained from:

  https://github.com/hawk/lux.git
https://developer.cisco.com/learning/modules/service-provider-labs/service-dev-201/create-and-apply-a-service-template/

################
config
devices device dist-rtr0 config interface Loopback 100
ip address 192.168.10.20 255.255.255.255
top
devices device core-rtr0 config interface Loopback 100
ipv4 address 192.168.10.20 255.255.255.255
top
commit dry-run outformat xml
end no-confirm
exit

###############
admin@ncs(config)# loopback_py lb_py_template device R1 loopback-intf 201 ip_prefix 172.16.1.0/24
admin@ncs(config-loopback_py-lb_py_template)# commit dry-run outformat native 
The following warnings were generated:
  Dont shutdown Gi2 in R6
  R5 should have Loopback0 interface
  R3 should have Loopback0 interface
  R6 Dont shutdown Gi2 interface
  R5 Dont shutdown Gi2 interface
  R3 Dont shutdown Gi2 interface
  R1 Dont shutdown Gi2 interface
Proceed? [yes,no] yes
native {
    device {
        name R1
        data interface Loopback201
              ip address 172.16.1.1 255.255.255.255
             exit
    }
}
####